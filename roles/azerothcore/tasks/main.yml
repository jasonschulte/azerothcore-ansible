---
#####################
# Is the configuration file available
#####################

- name: Check for configuration file
  stat:
    path: "group_vars/all"
  changed_when: False
  delegate_to: localhost
  register: local_settings

- name: The file './group_vars/all' must exist
  debug:
    msg: "Please copy './group_vars/all.dist' -> ./group_vars/all' and modify it"
  when: local_settings.stat is defined and local_settings.stat.exists == false

- meta: end_play
  when: local_settings.stat is defined and local_settings.stat.exists == false

#####################
# Log we started the role
#####################

- name: Write ansible log
  shell: date "+{{ ansible_log_date_format }} - azerothcore" >> "{{ ansible_log_file }}"
  changed_when: False
  become: true

#####################
# Dependancies
#####################

- name: Include task for dependancies
  include_tasks: "tasks/dependancies.yml"

#####################
# Source code and build
#####################

- name: Include task for building
  include_tasks: "tasks/build.yml"

#####################
# Handle maps
#####################

- name: Include task for maps
  include_tasks: "tasks/maps.yml"

#####################
# Configuration files
#####################

- name: Include task for configuration
  include_tasks: "tasks/configuration.yml"

#####################
# Stop old server
#####################

#Stop before the database dumps etc. below
- name: Stop world and authserver
  systemd:
    state: stopped
    name: "{{ item }}"
  with_items:
    - "worldserver"
    - "authserver"
  become: yes

#####################
# Database
#####################

- name: Include task for database
  include_tasks: "tasks/database.yml"

#####################
# Symlink new build
#####################

#Ownership doesn't seem to work?
- name: Update symlink to the latest release
  file:
    src: "/home/{{ azerothcore_user }}/{{ azerothcore_folder }}/{{ azerothcore_server_release }}"
    path: "/home/{{ azerothcore_user }}/{{ azerothcore_folder }}/{{ azerothcore_server }}"
    state: link
    owner: "{{ azerothcore_user }}"
    group: "{{ azerothcore_user }}"

#####################
# Start new server
#####################

# - name: Start world- and authserver
#   systemd:
#     state: started
#     name: "{{ item }}"
#   with_items:
#     - "worldserver"
#     - "authserver"
#   become: yes

#####################
# Setup backup
#####################

# - name: Setup backup using cron
#   cron:
#     name: Backup Azerothcore databases
#     minute: "{{ azerothcore_cron_minute }}"
#     hour: "{{ azerothcore_cron_hour }}"
#     job: "cd /home/{{ azerothcore_user }}/{{ azerothcore_folder }}/backup/ && ./backup.sh > /dev/null"
#   when: azerothcore_cron_minute != "" or azerothcore_cron_hour != ""
